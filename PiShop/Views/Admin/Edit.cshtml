@model Domain.Product

@{
    ViewData["Title"] = "Edit Админ панель: редактирование товара   ";
            Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<head>
    <link rel="stylesheet" href="~/css/Admin.css" />
</head>

<div class="panel">
    <div class="panel-heading">
        <h3>Редактирование товара «@Model.Name»</h3>
    </div>

    <div class="ImageEditAdmin"> <img class="ImageEditAdmin" style="max-height:200px; max-width:200px;" src="~/images/Каталог/@Model.Address" /> </div>
    @Html.ActionLink("Отменить изменения и вернуться к списку", "IndexProduct", null, new
         {
             @class = "btn btn-default"
         })
    @using (Html.BeginForm("Edit", "Admin",
FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        <div class="panel-footer">
            <input type="submit" value="Сохранить" class="btn btn-primary" />
        </div>
        <button type="submit" name="action" value="SaveAndNextProduct" class="btn btn-primary">Сохранить и продолжить следующий элемент</button>
        <div class="panel-body">
            @Html.HiddenFor(m => m.Id)
            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                switch (property.PropertyName)
                {
                    case "Id":
                    case "ImageData":
                    case "ImageMimeType":
                        // Ничего не делать
                        break;
                    default:
                        <div class="form-group">
                            <label>@(property.DisplayName ?? property.PropertyName)</label>
                            @if (property.PropertyName == "Description" )
                            {
                                @Html.TextArea(property.PropertyName, null,
                                    new { @class = "form-control", rows = 16 })
                            }
                            else
                            {
                                @Html.TextBox(property.PropertyName, null,
                                    new { @class = "form-control" })
                            }
                            @Html.ValidationMessage(property.PropertyName)
                        </div>
                        break;
                }
            }
            <div class="form-group">
                <div style="position:relative;">
                    <label>Картинка</label>
                    <a class='btn' href='javascript:;'>
                        Выберите файл...
                        <input type="file" name="Image" size="40"
                               style="position:absolute;z-index:2;top:0;
                                left:0;filter: alpha(opacity=0); opacity:0;
                                background-color:transparent;color:transparent;"
                               onchange='$("#upload-file-info").html($(this).val());'>
                    </a>
                    <span class='label label-info' id="upload-file-info"></span>
                </div>
                @if (Model.ImageData == null)
                {
                    <div class="form-control-static">Нет картинки</div>
                }
                else
                {
                    <img width="150" height="150"
                         src="@Url.Action("GetImage", "Home",
                        new { Model.Id })" />
                }
            </div>
        </div>
        <div class="panel-footer">
            <input type="submit" value="Сохранить" class="btn btn-primary" />
            <button type="submit" name="action" value="SaveAndNextProduct" class="btn btn-primary">Сохранить и продолжить следующий элемент</button>

            @Html.ActionLink("Отменить изменения и вернуться к списку", "IndexProduct", null, new
            {
                @class = "btn btn-default"
            })
        </div>
    }
</div>